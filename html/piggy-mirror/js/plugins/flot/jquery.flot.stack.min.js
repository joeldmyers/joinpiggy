/*
Flot plugin for stacking data sets, i.e. putting them on top of each
other, for accumulative graphs.

The plugin assumes the data is sorted on x (or y if stacking
horizontally). For line charts, it is assumed that if a line has an
undefined gap (from a null point), then the line above it should have
the same gap - insert zeros instead of "null" if you want another
behaviour. This also holds for the start and end of the chart. Note
that stacking a mix of positive and negative values in most instances
doesn't make sense (so it looks weird).

Two or more series are stacked when their "stack" attribute is set to
the same key (which can be any number or string or just "true"). To
specify the default stack, you can set

  series: {
    stack: null or true or key (number/string)
  }

or specify it for a specific series

  $.plot($("#placeholder"), [{ data: [ ... ], stack: true }])
  
The stacking order is determined by the order of the data series in
the array (later series end up on top of the previous).

Internally, the plugin modifies the datapoints in each series, adding
an offset to the y value. For line series, extra data points are
inserted through interpolation. If there's a second y value, it's also
adjusted (e.g for bar charts or filled areas).
*/
!function(n){function s(n){function s(n,s){for(var t=null,i=0;i<s.length&&n!=s[i];++i)s[i].stack==n.stack&&(t=s[i])
return t}function t(n,t,i){if(null!=t.stack){var l=s(t,n.getData())
if(l){for(var o,e,f,u,r,a,p,h=i.pointsize,c=i.points,g=l.datapoints.pointsize,k=l.datapoints.points,v=[],z=t.lines.show,b=t.bars.horizontal,d=h>2&&(b?i.format[2].x:i.format[2].y),y=z&&t.lines.steps,D=!0,j=b?1:0,w=b?0:1,x=0,Q=0;;){if(x>=c.length)break
if(p=v.length,null==c[x]){for(m=0;m<h;++m)v.push(c[x+m])
x+=h}else if(Q>=k.length){if(!z)for(m=0;m<h;++m)v.push(c[x+m])
x+=h}else if(null==k[Q]){for(m=0;m<h;++m)v.push(null)
D=!0,Q+=g}else{if(o=c[x+j],e=c[x+w],u=k[Q+j],r=k[Q+w],a=0,o==u){for(m=0;m<h;++m)v.push(c[x+m])
v[p+w]+=r,a=r,x+=h,Q+=g}else if(o>u){if(z&&x>0&&null!=c[x-h]){for(f=e+(c[x-h+w]-e)*(u-o)/(c[x-h+j]-o),v.push(u),v.push(f+r),m=2;m<h;++m)v.push(c[x+m])
a=r}Q+=g}else{if(D&&z){x+=h
continue}for(m=0;m<h;++m)v.push(c[x+m])
z&&Q>0&&null!=k[Q-g]&&(a=r+(k[Q-g+w]-r)*(o-u)/(k[Q-g+j]-u)),v[p+w]+=a,x+=h}D=!1,p!=v.length&&d&&(v[p+2]+=a)}if(y&&p!=v.length&&p>0&&null!=v[p]&&v[p]!=v[p-h]&&v[p+1]!=v[p-h+1]){for(m=0;m<h;++m)v[p+h+m]=v[p+m]
v[p+1]=v[p-h+1]}}i.points=v}}}n.hooks.processDatapoints.push(t)}var t={series:{stack:null}}
n.plot.plugins.push({init:s,options:t,name:"stack",version:"1.2"})}(jQuery)
